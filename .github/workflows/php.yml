name: Test On Concrete 5

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        browser: [chrome, firefox]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build Docker Image
      run: docker image build -t docker5-no-install:8.5.2 tests/assets

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Update Packages
      run: sudo apt-get update

    - name: Install Geckodriver and Firefox
      if: matrix.browser == 'firefox'
      run: |
        wget -c -nc --retry-connrefused --tries=0 "https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz"
        tar -xvzf geckodriver*
        chmod +x geckodriver
        sudo apt-get -y install firefox

    - name: Install Chromedriver and Chrome
      if: matrix.browser == 'chrome'
      run: |
       sudo apt-get -y install google-chrome-stable
       LATEST_CHROMEDRIVER_VERSION=`curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE"`
       wget -c -nc --retry-connrefused --tries=0 "https://chromedriver.storage.googleapis.com/${LATEST_CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
       unzip -o -q chromedriver_linux64.zip
       
    - name: Run Chromedriver
      if: matrix.browser == 'chrome'
      run: ./chromedriver --port=4444 --url-base=wd/hub --whitelisted-ips=  > /dev/null 2>&1&

    - name: Run Geckodriver
      if: matrix.browser == 'firefox'
      run: ./geckodriver -p 4445  > /dev/null 2>&1&

    - name: Setup Concrete5
      run: docker run -d --name c5_docker -p 8080:80 -v ${GITHUB_WORKSPACE}/tests/assets/packages/dk_test_package:/app/packages/dk_test_package docker5-no-install:8.5.2

    - name: Wait for Server
      run: |
        until $(echo | nc localhost 8080); do sleep 1; echo waiting for C5 on port 8080...; done;
        echo "C5 Server started"

    - name: Build Test Helpers
      run: ${GITHUB_WORKSPACE}/vendor/bin/codecept build
    
    - name: Run Install Test
      run: ${GITHUB_WORKSPACE}/vendor/bin/codecept run Install --env=${{ matrix.browser }}
    
    - name: Run Dashboard Test
      run: ${GITHUB_WORKSPACE}/vendor/bin/codecept run Dashboard --env=${{ matrix.browser }}
    
    - name: Run Page Test
      run: ${GITHUB_WORKSPACE}/vendor/bin/codecept run Page --env=${{ matrix.browser }}

    - name: Upload html on fail
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: html-failure
        path: tests/_output/
    - name: Failure Things
      if: failure()
      run: |
        ls -la ${GITHUB_WORKSPACE}/tests/assets/packages
        docker exec c5_docker ls -la
        docker exec c5_docker ls -la packages
        docker exec c5_docker ccm-service start
